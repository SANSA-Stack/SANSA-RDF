{
  "paragraphs": [
    {
      "title": "Reading Austria OSM RDF data with SANSA N-tripleReader",
      "text": "%spark\nimport org.apache.jena.riot.Lang\nimport com.typesafe.config.ConfigFactory\nimport net.sansa_stack.ml.spark.clustering.utils.DataProcessing\nimport net.sansa_stack.rdf.spark.io._\n\n\nval input \u003d \"hdfs://namenode:8020/data/niedersachsen-pois_osm_rdf5L.nt\"\nval lang \u003d Lang.NTRIPLES\n\nval triples \u003d spark.rdf(lang)(input)\n\ntriples.take(10).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2021-01-10 21:14:18.792",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610313234688_1077391923",
      "id": "paragraph_1610313234688_1077391923",
      "dateCreated": "2021-01-10 21:13:54.688",
      "status": "READY"
    },
    {
      "title": "APIs to get coordinates, categories and finding distance between coordinates",
      "text": "%spark\nimport org.apache.spark.rdd.RDD\ncase class spatial(longitude: Double, latitude: Double) extends Serializable\ndef getPOICoordinates:RDD[(Long, spatial)] \u003d {\n    // get the coordinates of pois\n    val pattern \u003d \"POINT (.+ .+)\".r\n    val poiCoordinatesString \u003d triples.filter(x \u003d\u003e x.getPredicate.toString().equalsIgnoreCase(\"http://www.opengis.net/ont/geosparql#asWKT\"))\n    val removeOther\u003dpoiCoordinatesString.filter(f\u003d\u003e(!f.getSubject.toString().contains(\"http://openstreetmap.org/way/\")))\n    val removeRelation\u003dremoveOther.filter(f\u003d\u003e(!f.getSubject.toString().contains(\"http://openstreetmap.org/relation/\")))\n    .map(x \u003d\u003e (x.getSubject.toString().replace(\"http://openstreetmap.org/node/\", \"\").replace(\"/geom\", \"\").toLong,\n        pattern.findFirstIn(x.getObject.toString()).head.replace(\"POINT \", \"\")\n        .replace(\"^^http://www.opengis.net/ont/geosparql#wktLiteral\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\"))) \n        // transform to Coordinate object\n    //removeRelation.coalesce(1)saveAsTextFile(\"/home/rajjat/Desktop/OSM/res2\")    \n    val m\u003dremoveRelation.mapValues(x \u003d\u003e {\n    val coordinates \u003d x.replace(\"(\", \"\").replace(\")\", \"\").split(\" \")\n    spatial(coordinates(0).toDouble, coordinates(1).toDouble)\n    })\n    m\n}\ndef getCat():RDD[(Long, String)]\u003d{\n    val keyName\u003dtriples.filter(f\u003d\u003ef.getPredicate.toString().contains(\"https://wiki.openstreetmap.org/Key:amenity\"))\n    val filterSub\u003dkeyName.filter(f\u003d\u003ef.getSubject.toString().contains(\"http://openstreetmap.org/node\"))\n    val getKV\u003d filterSub.map(x \u003d\u003e ((x.getSubject.toString().replace(\"http://openstreetmap.org/node/\", \"\").toLong),\n        x.getObject.toString()))\n    getKV.take(2).foreach(println)\n    getKV      \n}\n  \ndef distFrom(locationTargetd:spatial,otherCordinate:(spatial, String)):(String,Double,spatial)\u003d{\n    val earthRadius \u003d 6371000; //meters\n    val dLat \u003d Math.toRadians(locationTargetd.latitude-otherCordinate._1.latitude);\n    val dLng \u003d Math.toRadians(locationTargetd.longitude-otherCordinate._1.longitude);\n    val a \u003d Math.sin(dLat/2) * Math.sin(dLat/2) +\n               Math.cos(Math.toRadians(otherCordinate._1.latitude)) * Math.cos(Math.toRadians(locationTargetd.latitude)) *\n               Math.sin(dLng/2) * Math.sin(dLng/2);\n    val c \u003d 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    val dist \u003d (earthRadius * c);\n\n    (otherCordinate._2,dist,otherCordinate._1)\n}\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-10 21:14:57.209",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610313259981_1089286833",
      "id": "paragraph_1610313259981_1089286833",
      "dateCreated": "2021-01-10 21:14:19.981",
      "status": "READY"
    },
    {
      "title": "KV pair of poiID,coordinates and categories",
      "text": "%spark\ncase class PoiOSM(poi_id: Long, coordinate: spatial, categories: String)  extends Serializable\nvar poiCoordinates: RDD[(Long, spatial)]\u003d getPOICoordinates.persist()\nvar categoriesOSM\u003d getCat\nvar join\u003dpoiCoordinates.join(categoriesOSM)//.join(cuisne)\nval pois\u003djoin.map(f\u003d\u003ePoiOSM(f._1,f._2._1,f._2._2.toString))",
      "user": "anonymous",
      "dateUpdated": "2021-01-10 21:15:25.386",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610313304040_1340419293",
      "id": "paragraph_1610313304040_1340419293",
      "dateCreated": "2021-01-10 21:15:04.051",
      "status": "READY"
    },
    {
      "title": "Calculating number of neighbours around a threshold distance, Neighbors Entropy and competitiveness",
      "text": "%spark\ncase class finddist(poi:Array[(String, Double, spatial)])\n\n//val poiCategorySetVienna \u003d tomTomData.poiCategoryId\nval poiCategorySetVienna \u003d pois.map(poi \u003d\u003e (poi.coordinate,poi.categories)).persist()\nprintln(\"cout:\" + pois.count())\nval locationTargetd\u003dspatial(9.7486913,52.3946003)\nval collectted\u003dpoiCategorySetVienna.collect\nval findDistance\u003dcollectted.map(f\u003d\u003edistFrom(locationTargetd,f))\nval filterDistance\u003dfindDistance.filter(f\u003d\u003ef._2\u003c2000000) // NOTE: reducing this to small value would yield to 0 density, causing a dvide by zero error (last line)\nval casefilterDistance\u003dfinddist(filterDistance)\nfilterDistance.take(2).foreach(println)\nval density\u003dfilterDistance.size\nprintln(\"density\u003d\"+density)\n\n//entropy\nval entropy\u003dfilterDistance.map(f\u003d\u003ef._1).toSet\nval countDiffernetVenues\u003dentropy.size\nprintln(\"entropy\u003d\"+countDiffernetVenues)\n\n//comeptitiveness\nval shopName\u003d\"bar\"\nval countCoffeShop\u003dfilterDistance.filter(f\u003d\u003ef._1.contains(shopName))\nval casefilterShop\u003dfinddist(countCoffeShop)\nprintln(\"percenatge of bar to total number of nearby places.  \u003d\"+(countCoffeShop.size*100/density)+\"%\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-10 21:15:53.510",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610313332252_1027071005",
      "id": "paragraph_1610313332252_1027071005",
      "dateCreated": "2021-01-10 21:15:32.260",
      "status": "READY"
    },
    {
      "text": "%spark\nz.angularBind(\"casefilterDistance\", casefilterDistance)\nz.angularBind(\"casefilterShop\", casefilterShop)\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-10 21:16:05.832",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610313359270_486135531",
      "id": "paragraph_1610313359270_486135531",
      "dateCreated": "2021-01-10 21:15:59.270",
      "status": "READY"
    },
    {
      "title": "Measuring the number of neighbors around the place to assess the popularity of a place",
      "text": "%spark\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-10 21:16:18.413",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610313371995_1563045728",
      "id": "paragraph_1610313371995_1563045728",
      "dateCreated": "2021-01-10 21:16:11.996",
      "status": "READY"
    },
    {
      "title": "Number of competitors nearby place",
      "text": "%angular\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n  \u003chead\u003e\n      \u003ctitle\u003eSLIPO\u003c/title\u003e\n      \u003c!-- Convex hull library --\u003e\n    \u003clink rel\u003d\"stylesheet\" href\u003d\"//ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/themes/smoothness/jquery-ui.css\" /\u003e \n    \u003clink rel\u003d\"stylesheet\" href\u003d\"https://unpkg.com/leaflet@1.3.1/dist/leaflet.css\" integrity\u003d\"sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ\u003d\u003d\" crossorigin\u003d\"\"/\u003e\n    \u003cscript src\u003d\"https://unpkg.com/leaflet@1.3.1/dist/leaflet.js\" integrity\u003d\"sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw\u003d\u003d\" crossorigin\u003d\"\"\u003e\u003c/script\u003e\n\n      \u003clink rel\u003d\"stylesheet\" href\u003d\"https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css\"\u003e  \n        \n    \n     \u003c!--  \u003cscript src\u003d\"https://fastcdn.org/Leaflet.awesome-markers/2.0.1/leaflet.awesome-markers.js\"\u003e\u003c/script\u003e --\u003e\n   \u003cscript\u003e\n      \n      /*\n       Leaflet.AwesomeMarkers, a plugin that adds colorful iconic markers for Leaflet, based on the Font Awesome icons\n       (c) 2012-2013, Lennard Voogdt\n\n      http://leafletjs.com\n      https://github.com/lvoogdt\n     */\n\n     /*global L*/\n\n(function (window, document, undefined) {\n    \"use strict\";\n    /*\n     * Leaflet.AwesomeMarkers assumes that you have already included the Leaflet library.\n     */\n\n    L.AwesomeMarkers \u003d {};\n\n    L.AwesomeMarkers.version \u003d \u00272.0.1\u0027;\n\n    L.AwesomeMarkers.Icon \u003d L.Icon.extend({\n        options: {\n            iconSize: [35, 45],\n            iconAnchor:   [17, 42],\n            popupAnchor: [1, -32],\n            shadowAnchor: [10, 12],\n            shadowSize: [36, 16],\n            className: \u0027awesome-marker\u0027,\n            prefix: \u0027glyphicon\u0027,\n            spinClass: \u0027fa-spin\u0027,\n            extraClasses: \u0027\u0027,\n            icon: \u0027home\u0027,\n            markerColor: \u0027blue\u0027,\n            iconColor: \u0027white\u0027\n        },\n\n        initialize: function (options) {\n            options \u003d L.Util.setOptions(this, options);\n        },\n\n        createIcon: function () {\n            var div \u003d document.createElement(\u0027div\u0027),\n                options \u003d this.options;\n\n            if (options.icon) {\n                div.innerHTML \u003d this._createInner();\n            }\n\n            if (options.bgPos) {\n                div.style.backgroundPosition \u003d\n                    (-options.bgPos.x) + \u0027px \u0027 + (-options.bgPos.y) + \u0027px\u0027;\n            }\n\n            this._setIconStyles(div, \u0027icon-\u0027 + options.markerColor);\n            return div;\n        },\n\n        _createInner: function() {\n            var iconClass, iconSpinClass \u003d \"\", iconColorClass \u003d \"\", iconColorStyle \u003d \"\", options \u003d this.options;\n\n            if(options.icon.slice(0,options.prefix.length+1) \u003d\u003d\u003d options.prefix + \"-\") {\n                iconClass \u003d options.icon;\n            } else {\n                iconClass \u003d options.prefix + \"-\" + options.icon;\n            }\n\n            if(options.spin \u0026\u0026 typeof options.spinClass \u003d\u003d\u003d \"string\") {\n                iconSpinClass \u003d options.spinClass;\n            }\n\n            if(options.iconColor) {\n                if(options.iconColor \u003d\u003d\u003d \u0027white\u0027 || options.iconColor \u003d\u003d\u003d \u0027black\u0027) {\n                    iconColorClass \u003d \"icon-\" + options.iconColor;\n                } else {\n                    iconColorStyle \u003d \"style\u003d\u0027color: \" + options.iconColor + \"\u0027 \";\n                }\n            }\n\n            return \"\u003ci \" + iconColorStyle + \"class\u003d\u0027\" + options.extraClasses + \" \" + options.prefix + \" \" + iconClass + \" \" + iconSpinClass + \" \" + iconColorClass + \"\u0027\u003e\u003c/i\u003e\";\n        },\n\n        _setIconStyles: function (img, name) {\n            var options \u003d this.options,\n                size \u003d L.point(options[name \u003d\u003d\u003d \u0027shadow\u0027 ? \u0027shadowSize\u0027 : \u0027iconSize\u0027]),\n                anchor;\n\n            if (name \u003d\u003d\u003d \u0027shadow\u0027) {\n                anchor \u003d L.point(options.shadowAnchor || options.iconAnchor);\n            } else {\n                anchor \u003d L.point(options.iconAnchor);\n            }\n\n            if (!anchor \u0026\u0026 size) {\n                anchor \u003d size.divideBy(2, true);\n            }\n\n            img.className \u003d \u0027awesome-marker-\u0027 + name + \u0027 \u0027 + options.className;\n\n            if (anchor) {\n                img.style.marginLeft \u003d (-anchor.x) + \u0027px\u0027;\n                img.style.marginTop  \u003d (-anchor.y) + \u0027px\u0027;\n            }\n\n            if (size) {\n                img.style.width  \u003d size.x + \u0027px\u0027;\n                img.style.height \u003d size.y + \u0027px\u0027;\n            }\n        },\n\n        createShadow: function () {\n            var div \u003d document.createElement(\u0027div\u0027);\n\n            this._setIconStyles(div, \u0027shadow\u0027);\n            return div;\n      }\n    });\n        \n    L.AwesomeMarkers.icon \u003d function (options) {\n        return new L.AwesomeMarkers.Icon(options);\n    };\n\n}(this, document));\n\n\n\u003c/script\u003e \n\n     \u003cscript src\u003d\"http://cdn.jsdelivr.net/gh/Rajjat/FrontEND/resources/hull.js\"\u003e\u003c/script\u003e\n  \n          \n  \u003c/head\u003e\n  \u003cbody\u003e\n     \u003cdiv id\u003d\"someId1\"\u003e\u003c/div\u003e\n     \u003cdiv id\u003d\"someId\"\u003e\u003c/div\u003e\n     \u003cdiv id\u003d\"demo\"\u003e\n     \u003ccenter\u003e\n     \u003cdiv id\u003d\"mapid1\" style\u003d\"width: 130%; height: 800px;\"\u003e\u003c/div\u003e\n     \u003c/center\u003e\n     \n     \u003cscript\u003e\n      \n      //var mymap \u003d L.map(\u0027mapid\u0027).setView([51.3,6.6], 11);\n      var mymap1 \u003d L.map(\u0027mapid1\u0027).setView([48.20817324, 16.3738346], 11);\n    \n      L.tileLayer(\u0027https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token\u003dpk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw\u0027, {\n      maxZoom: 18,\n      attribution: \u0027Map data \u0026copy; \u003ca href\u003d\"http://openstreetmap.org\"\u003eOpenStreetMap\u003c/a\u003e contributors, \u0027 +\n      \u0027\u003ca href\u003d\"http://creativecommons.org/licenses/by-sa/2.0/\"\u003eCC-BY-SA\u003c/a\u003e, \u0027 +\n      \u0027Imagery © \u003ca href\u003d\"http://mapbox.com\"\u003eMapbox\u003c/a\u003e\u0027,\n      id: \u0027mapbox.streets\u0027\n      }).addTo(mymap1);\n\n      \n      var colorMarker \u003d [];\n      colorMarker[0] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027red\u0027});\n      colorMarker[1] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027green\u0027});\n      colorMarker[2] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027darkred\u0027});\n      colorMarker[3] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027orange\u0027});\n      colorMarker[4] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027darkgreen\u0027});\n      colorMarker[5] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027blue\u0027});\n      colorMarker[6] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027purple\u0027});\n      colorMarker[7] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027darkpurple\u0027});\n      colorMarker[8] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027cadetblue\u0027});\n      colorMarker[9] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027darkblue\u0027});\n      // colorMarker[10] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027cadetblue\u0027});\n      // colorMarker[11] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027cadetblue\u0027});\n      // colorMarker[12] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027cadetblue\u0027});\n\n      var colorHull \u003d [];\n      colorHull[0] \u003d \u0027#e84c38\u0027 ;\n      colorHull[1] \u003d \u0027#93c827\u0027 ;\n      colorHull[2] \u003d \u0027#b54347\u0027 ;\n      colorHull[3] \u003d \u0027#f89b31\u0027 ;\n      colorHull[4] \u003d \u0027#919625\u0027 ;\n      colorHull[5] \u003d \u0027#3db2e5\u0027 ;\n      colorHull[6] \u003d \u0027#d759bb\u0027 ;\n      colorHull[7] \u003d \u0027#5e3c6f\u0027 ;\n      colorHull[8] \u003d \u0027#4e7080\u0027 ;\n      colorHull[9] \u003d \u0027#0066a4\u0027 ;\n      \n\n    \n      \n      \n      var element1 \u003d $(\u0027#someId1\u0027);\n      var angularVar1 \u003d \u0027casefilterShop\u0027;\n      var scope1 \u003d angular.element(element1.parent(\u0027.ng-scope\u0027)).scope().compiledScope;\n      window.watcher \u003d scope1.$watch(angularVar1, function(newVal1, oldVal1){\n      var jsonE1 \u003d JSON.stringify(newVal1);\n       console.log(JSON.stringify(newVal1));\n      var data1 \u003d JSON.parse(jsonE1);\n      console.log(\"lat\u003d\"+data1.poi[0]._3.latitude);\n      \n     \n      for (i\u003d0;i\u003c6;i++){\n       console.log(\"lat\u003d\"+data1.poi[0]._3.latitude+data1.poi[0]._3.longitude);\n       L.marker([data1.poi[i]._3.latitude,data1.poi[i]._3.longitude], {icon: colorMarker[0]}).addTo(mymap1).bindPopup(data1.poi[i]._1.toString());\n      }\n      L.marker([48.20817324,16.3738346], {icon: colorMarker[1]}).addTo(mymap1);\n      //16.3738346,48.20817324\n     });\n     \n     \n    \u003c/script\u003e\n  \u003c/body\u003e\n\n\u003c/html\u003e\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-10 21:17:16.261",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610313399997_1526989909",
      "id": "paragraph_1610313399997_1526989909",
      "dateCreated": "2021-01-10 21:16:39.997",
      "status": "READY"
    },
    {
      "text": "%angular\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-10 21:17:24.832",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610313444823_715670058",
      "id": "paragraph_1610313444823_715670058",
      "dateCreated": "2021-01-10 21:17:24.823",
      "status": "READY"
    }
  ],
  "name": "Prediction based on geographical features",
  "id": "2FVDSPR4R",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}